package com.nikoladichev.financialreportanalyzer.model.fundamentals.statements;

import java.math.BigDecimal;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * Income statements are detailed reports that show how much profit or loss the company has
 * generated over a particular year. The income statement, also known as profit or loss account,
 * reports the company expenses that arise from the business operations.
 *
 * @see <a
 *     href="https://site.financialmodelingprep.com/developer/docs/financial-statement-free-api/">Company
 *     Financial Reports API</a>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class IncomeStatement implements FinancialStatement {
  /** The date of the financial data. */
  private String date;

  /** The symbol representing the company. */
  private String symbol;

  /** The currency in which the financial data is reported. */
  private String reportedCurrency;

  /** The Central Index Key (CIK) of the company. */
  private String cik;

  /** The filing date of the financial data. */
  private String fillingDate;

  /** The accepted date of the financial data. */
  private String acceptedDate;

  /** The calendar year of the financial data. */
  private String calendarYear;

  /** The period of the financial data (e.g., FY for fiscal year). */
  private String period;

  /** The total revenue generated by the company during the specified period. */
  private BigDecimal revenue;

  /**
   * The direct costs associated with producing the goods or services sold by the company. Also
   * known as Cost of goods sold (COGS).
   */
  private BigDecimal costOfRevenue;

  /**
   * The difference between revenue and the cost of revenue. It represents the profit made by the
   * company before deducting operating expenses.
   */
  private BigDecimal grossProfit;

  /**
   * The gross profit expressed as a ratio of gross profit to revenue. It indicates the percentage
   * of revenue that remains after deducting the cost of revenue.
   */
  private BigDecimal grossProfitRatio;

  /** The expenses incurred by the company on research and development activities. */
  private BigDecimal researchAndDevelopmentExpenses;

  /**
   * The general and administrative expenses incurred by the company, excluding selling and
   * marketing expenses.
   */
  private BigDecimal generalAndAdministrativeExpenses;

  /** The expenses incurred by the company on selling and marketing activities. */
  private BigDecimal sellingAndMarketingExpenses;

  /** The total selling, general, and administrative expenses incurred by the company. */
  private BigDecimal sellingGeneralAndAdministrativeExpenses;

  /** Other miscellaneous expenses incurred by the company. */
  private BigDecimal otherExpenses;

  /**
   * The total operating expenses incurred by the company, including research and development,
   * general and administrative, and selling and marketing expenses.
   */
  private BigDecimal operatingExpenses;

  /**
   * The sum of the cost of revenue and operating expenses. It represents the total costs and
   * expenses incurred by the company during the specified period.
   */
  private BigDecimal costAndExpenses;

  /** The income generated by the company from interest-bearing assets, such as loans and bonds. */
  private BigDecimal interestIncome;

  /** The expenses incurred by the company on interest payments for borrowed funds. */
  private BigDecimal interestExpense;

  /** The expenses incurred by the company on depreciation and amortization of its assets. */
  private BigDecimal depreciationAndAmortization;

  /**
   * Earnings before interest, taxes, depreciation, and amortization. It represents the company's
   * operating income before accounting for interest, taxes, and non-cash expenses.
   */
  private BigDecimal ebitda;

  /**
   * The EBITDA ratio expressed as a percentage of EBITDA to revenue. It indicates the profitability
   * of the company's operations.
   */
  private BigDecimal ebitdaratio;

  /** The company's operating income after deducting operating expenses from gross profit. */
  private BigDecimal operatingIncome;

  /**
   * The operating income ratio expressed as a percentage of operating income to revenue. It
   * indicates the profitability of the company's core operations.
   */
  private BigDecimal operatingIncomeRatio;

  /**
   * The total other income or expenses, net of the company. It includes non-operating income and
   * expenses not directly related to the company's core operations.
   */
  private BigDecimal totalOtherIncomeExpensesNet;

  /**
   * The income before tax of the company. It represents the company's earnings before accounting
   * for income taxes.
   */
  private BigDecimal incomeBeforeTax;

  /**
   * The income before tax ratio expressed as a percentage of income before tax to revenue. It
   * indicates the overall profitability of the company before considering income taxes.
   */
  private BigDecimal incomeBeforeTaxRatio;

  /** The income tax expense incurred by the company during the specified period. */
  private BigDecimal incomeTaxExpense;

  /**
   * The net income of the company. It represents the company's earnings after deducting all
   * expenses and taxes.
   */
  private BigDecimal netIncome;

  /**
   * The net income ratio expressed as a percentage of net income to revenue. It indicates the
   * profitability of the company's operations after considering all expenses and taxes.
   */
  private BigDecimal netIncomeRatio;

  /**
   * The earnings per share (EPS) of the company. It represents the portion of the company's profit
   * allocated to each outstanding share of common stock.
   */
  private BigDecimal eps;

  /**
   * The diluted earnings per share (EPS) of the company. It represents the portion of the company's
   * profit allocated to each outstanding share of common stock, assuming the conversion of all
   * potentially dilutive securities.
   */
  private BigDecimal epsdiluted;

  /** The weighted average number of shares outstanding during the specified period. */
  private BigDecimal weightedAverageShsOut;

  /**
   * The diluted weighted average number of shares outstanding during the specified period, assuming
   * the conversion of all potentially dilutive securities.
   */
  private BigDecimal weightedAverageShsOutDil;

  /** The link to the financial data on the SEC website. */
  private String link;

  /** The final link to the specific financial filing on the SEC website. */
  private String finalLink;

  /**
   * Earnings Before Interest and Taxes (EBIT). Represents the operating profit of the company
   * before deducting interest expenses and income taxes.
   */
  public BigDecimal getEbit() {
    return this.ebitda.add(depreciationAndAmortization);
  }

  @Override
  public FinancialStatementType getStatementType() {
    return FinancialStatementType.INCOME_STATEMENT;
  }
}
